3 different and individual classes:
- simulate cards, which will have the suit and the rank
- simulate decks, which you can use to have 52 cards in a deck and their associates functions
- simulate hands, which you can use to deal out cards in a specific order to players

Blackjack game rules we will follow and use:

1. Blackjack will be played between the dealer (computer) and the player (you)

2. There will be a deck of 52 cards. This deck will be shuffled to set up the game.

3. The deck is face down so the first card to be dealt from the top of the deck (which is face down)
is technically the last card in the deck. This card usually goes to the player, then the next card
goes to the dealer which is face down (ie no one gets to the see the card or know its value),
the next card to the player and the next to the dealer. But this card of the dealer is face up while
both cards of the player is face up (value and rank of both cards are showing).

4. So both player and dealer end up with 2 cards. But the player can only see 1 card of the dealer
that is showing while the other card is face down.

5. We will change it up a little (because we can) and give the first card to the dealer and the next
to the player and so on.

6. Once the 2 cards each have been dealt, it's the player's turn to act. They can take a card (hit),
or they can choose to take no more cards (stand) in which case they close out their turn and it's the
dealer's turn to act.

7. Player can take more than 1 card (can hit multiple times if they chose) before closing out their turn
as can the dealer.

Objective: the objective of the game is to get a total value of 21 among the cards dealt (or as close
to 21 as possible) WITHOUT going over 21. If the value of the cards in the hand dealt to the player
exceed 21, then the player 'busts' and loses the game. If the value of the dealer's hand exceed 21
and the player had NOT busted when it was their turn to play, then the dealer 'busts'
and the player wins the hand.

8. Getting a blackjack, i.e. 2 cards that add up to 21, results in an automatic win for the player
(unless the dealer also gets a blackjack in which case is a tie).

9. Jack, Queen, King all carry values of 10. Ace can have value of 1 or 11. All other cards have value
that is listed. i.e. 2 has value of 2, 3 is worth 3 and so on. So a hand consisting of Jack of Diamonds
and an 8 of spades carries a value of 18, a hand consisting of Ace of clubs, 5 of diamonds and 4 of spades
(11 + 5 + 4) carries a value of 20.

10. So when a player gets any combo of Ace and face card (King, Queen, Jack) or a 10 as their two dealt cards,
they automatically win and don't have to act anymore in the hand. This is called Blackjack.

11. The dealer has to keep hitting unless the total value of their 2 cards is 17 or above. For example if a
dealer has 10 of spades and 6 of heards for total value of 16. They are forced to take a card from the deck.
In the same scenario a player may choose to 'stand' and not take any more cards and end their turn.

For simplicity we will skip 2 features of blackjack called Splitting and Doubling Down. Both of them have
money objectives and are therefore not necessary for our game.

RSpec
Spec, write out the requirements:
- This game will be played between the player (us) and the dealer (computer)
- We need to have a deck and be able to shuffle the deck
- Deal a hand, for example take a card from the deck and deal it to the dealer, then the player etc (on demand as we please)
- Card can be face down or up
- Ace can have value of 1 or 11 depending on what the player chooses or the situation
- Player must be able to stand, hit (take a card)
- Dealer has not option but to hit if less than 17
- If player gets 21 or blackjack with 2 cards, then player cannot hit anymore and their turn ends automatically

Classes - Card, Deck, Hand

Card:
- Suit - eg spades, hearts, clubs or diamonds
- Rank range between 1 and 11
- Show (and hide a card)

SUITS = ['Spades', 'Hearts', 'Clubs', 'Diamonds']
RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']

Deck:
- 52 cards
- suits, ranks
- deck
- deal_card
- replace_with

Loop over the Suits - for each suit, fill the ranks
4 * 13 = 52 cards


Dealer - gets a hand
Player - gets a hand

Hand class
- gives us the card dealt
- dealt cards array - method to add cards to this array
- total value of player's or dealer's dealt card
- output showing the details of each card and the total value

Ace can have value of 1 or 11

Show and no showing

add card method spec

- Create two cards, add them to the hand, verify a few things.

- Let's add a test to verify the correct cards were added by our add_card method in the hand.

Hand Values
- Calculates the value of a hand
- All face cards have value of 10 (Queen, King, Jack)
- All number cards have their value in their rank
- Ace has value of 1 or 11, based on the situation
